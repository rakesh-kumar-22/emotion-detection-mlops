name: ci pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: code checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2  # Fixed indentation here
        with:
          python-version: '3.9'

      - name: cache pip depenencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: dvc repro

      - name: Run model_tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run:
          python -m unittest tests/test_model.py

      - name: promote the model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT}}
        run: python scripts/promote_model.py

      - name: run flask app test
        if: success()
        env: 
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: log in to the docker
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACESS_TOKEN }}
      - name: build the docker image
        if: success()
        run: |
          docker build -t ${{secrets.DOCKER_HUB_USERNAME }}/emotion2:latest .
      - name: push the image to docker hub
        if: success()
        run: |
          docker push ${{secrets.DOCKER_HUB_USERNAME }}/emotion2:latest